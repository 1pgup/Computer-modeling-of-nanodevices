%%% Функция для нахождения ВФ основного состояния из приближения STO-4G %%%

% P - матрица плотности
% T - остовной Гамильтониан
% A - матрица, представляющая двухэлектронные интегралы
% С - матрица, состоящая из коэффициентов c_mi для i-ой молекулярной 
% орбитали и m-ой атомной орбитали
% g - базисный набор, построенный из орбиталей типа гаусса
% V - матрица преобразования
% alpha - набор базисных коэффициентов
% rplot - диапазон в а. е. для построения плотности вероятности
% r - расстояние между ядрами в а.е.

% GndWvFn - волновая функция основного состояния из приближения STO-4G
% C - новая матрица C при S = 1

function [GndWvFn, C] = fock_matrix(P, T, A, C, g, V, alpha, rplot, r)
    EVal = 0;
    Elast = 1;
    % Матрица Фока
    F = 0;

    while((abs(EVal(1) - Elast)) > 1e-6)
        Elast = EVal(1);
        for i = 1 : 8
            for j = 1 : 8
                J = 0;
                for k = 1 : 8
                    for l = 1 : 8
                        J = J + P(k, l) * g(i, j, k, l);
                    end
                end
                F(i, j) = T(i, j) + A(i, j) + J;
            end
        end

        % Решаем обобщенную проблему собственных значений
        Fp = V' * F * V;
        [Vecp, Val] = eig(Fp);
        Vec = V * Vecp;
        EigVal = diag(Val, 0);
        % Собственные значения энергий
        [EVal, index] = sort(EigVal);

        % собственный вектор, соответствующий основному состоянию
        GrCoeff = Vec(:, index(1)); 
        % Новая матрица C при S = 1
        C = GrCoeff.';

        % Новая матрица плотности
        P = 0.8 * P + 0.2 * (C') * C; 

        % Волновая функция основного состояния из приближения STO-4G
        GndWvFn=C(1:4)*exp(-(alpha(1:4)).'*(rplot.*rplot))...
            +C(5:8)*exp(-(alpha(5:8)).'*((rplot-r).*(rplot-r))); 
    end
end
