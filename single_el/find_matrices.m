%%%%%%%%%%%%%%%% Функция для нахождения основных матриц %%%%%%%%%%%%%%%%%%%

% alpha - набор базисных коэффициентов
% ra - расположение атома с i-м базисным коэффициентом
% r - расстояние между ядрами в а.е.

% S - матрица перекрывания
% T - Остовной Гамильтониан
% A - Первоначальная оценка двухэлектронных интегралов

function [S, T, A] = find_matrices(alpha, ra, r)
    for i = 1 : 8
        for j = 1 : i
            % Промежуточные переменные
            as = alpha(i) + alpha(j);
            ap = alpha(i) * alpha(j);
            rat = ap / as;

            % Местоположение гауссовой функции, полученной в результате 
            % произведения двух гауссовских базисных функций
            rp = (alpha(i) * ra(i) + alpha(j) * ra(j)) / as;
            
            % Находим матрицу интегралов перекрывания
            S(i, j) = (pi / as) ^ 1.5 * exp(-rat * (ra(i) - ra(j)) ^ 2);
            S(j, i) = S(i, j); % используя симметрию

            % Находим матрицу, представляющую оператор кин. энергии e
            T(i, j) = 0.5 * rat * (6 - 4 * rat * (ra(i) ...
                - ra(j)) ^ 2) * S(i, j);
            T(j, i) = T(i, j); % используя симметрию

            % Находим матрицу, представляющую взаимодействие ядро-ядро
            if (rp == 0)
                F0=1+sqrt(pi)/2*erf(sqrt(as*(rp-r)^2))/sqrt(as*(rp-r)^2);
            elseif (rp == r)
                F0=sqrt(pi)/2*erf(sqrt(as*rp^2))/sqrt(as*rp^2)+1;
            else
                F0=sqrt(pi)/2*(erf(sqrt(as*rp^2))/sqrt(as*rp^2) ...
                    +erf(sqrt(as*(rp-r)^2))/sqrt(as*(rp-r)^2));
            end
            A(i,j)=-2*pi/as*exp(-rat*(ra(i)-ra(j))^2)*F0;
            A(j, i) = A(i, j); % используя симметрию
        end
    end
end
